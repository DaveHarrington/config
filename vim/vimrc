"***********************************************"
" All custom keybindings
"
"***********************************************"
"
if has('python3')
endif

color dave256
let mapleader = ','

let s:xterm = &term =~ 'xterm'
let s:tmux = exists('$TMUX')
let s:iterm = s:tmux

"Pathogen Init
source ~/config/vim/bundle/vim-pathogen/autoload/pathogen.vim
if exists("*pathogen#infect")
  "let g:pathogen_disabled=[]
  call pathogen#infect()
endif

" Annoying when paste then replaces buffer
" https://superuser.com/questions/321547/how-do-i-replace-paste-yanked-text-in-vim-without-yanking-the-deleted-lines
vnoremap p "0p
vnoremap P "0P
vnoremap y "0y
vnoremap d "0d

" Quicklist
nnoremap ]q :cnext<cr>
nnoremap [q :cprevious<cr>

"Remove all trailing whitespace
nnoremap <silent> <F3> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

"<F8> is autopep8, from plugin
map <F4> :syntax sync fromstart<CR>

" Match tmux
noremap <c-w><c-i> :tabprev<cr>
noremap <c-w><c-o> :tabnext<cr>
noremap <c-w><c-t> :tabnew<cr>

" Fix annoying fold defaults
" fold all
noremap FJ zM
" unfold all
noremap FK zR
" toggle fold on method
noremap FL zA

ca BD bufdo bdelete

" Edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

"Clear highlights with ,/
nmap <silent> <leader>/ :nohlsearch<CR>

"************************"
" Annoyances

command! W w

cnoremap <C-k> <UP>
cnoremap <C-j> <DOWN>

" Annoying when you have just hit shift v for visual mode!
vnoremap <S-j> j
vnoremap <S-k> k

"Don't drop select after indent
vnoremap > >gv
vnoremap < <gv

"************************"
" Cursor line
autocmd InsertEnter * set cul
autocmd InsertLeave * set nocul

" Omnicomplete
set complete-=i
set completeopt+=longest

"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

" Intuitive backspacing in insert mode
set backspace=indent,eol,start

" Set encoding
set encoding=utf-8

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Tab completion
set wildmode=list:longest,list:full
set wildmenu
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Status bar
set laststatus=2

" Eh, swapfiles
set nobackup
set noswapfile

" Wrap at 72 chars for comments.
set formatoptions=cq textwidth=0 foldignore= wildignore+=*.py[co]

" Python
au FileType python imap <buffer> <F7> import pdb; pdb.set_trace()  # FIXME

let python_highlight_all = 1
au FileType python set shiftwidth=4 tabstop=4 expandtab
let g:virtualenv_auto_activate = 1
" PyFlakes highlighting
highlight clear SpellBad highlight SpellBad term=underline cterm=underline gui=underline

let g:syntastic_python_flake8_args = '--ignore="E302,E121,E122,E123,E126,E127,E128,E501,E265"'

" Other
au FileType htmldjango set wrap nolist breakat==}>
au FileType json set equalprg=json_reformat
au BufNewFile,BufRead *.cconf set syntax=python
au BufNewFile,BufRead *.tw set syntax=python
au BufNewFile,BufRead *.cinc set syntax=python
au BufRead *.vis so %

" load the plugin and indent settings for the detected filetype
filetype on
filetype plugin indent on

" Stuff
set modeline
set modelines=10
set splitbelow
set splitright
set nocompatible
set title
set hidden
set ruler
set history=1000
set scrolloff=3
set number
set switchbuf=useopen
set autoread
set showcmd
syntax on

"Scroll through long lines properly
nnoremap j gj
nnoremap k gk

"Persistent undo
silent !mkdir -vp ~/.cache/vim/undo/ > /dev/null 2>&1
if version >= 703
  set undofile
  set undodir=~/.cache/vim/undo/,~/tmp,.
  set colorcolumn:81
endif

set t_Co=256

""
"https://github.com/wincent/wincent/blob/bff9eb90f04b7/.vim/plugin/term.vim

if has('mouse')
  set mouse=a
  if s:xterm
    set ttymouse=xterm2
  endif
endif

set termguicolors
